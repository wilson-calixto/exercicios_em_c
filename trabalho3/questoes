==== Liata 1 - http://www.inf.ufes.br/~santos/files/active/0/lista-3.pdf

Márcio Fantini – Setembro 2007
1. O que imprime o programa a seguir? Tente entendê­lo e responder. A
seguir, execute­o e comprove o resultado.
# include <stdio.h>
int main()
{
     int t, i, M[3][4];
     for (t=0; t<3; ++t)
           for (i=0; i<4; ++i)
                M[t][i] = (t*4)+i+1;
     for (t=0; t<3; ++t)
     {
           for (i=0; i<4; ++i)
                printf ("%3d ", M[t][i]);
           printf ("\n");
     }
     return(0);
}
2. Responda as perguntas abaixo. Se achar necessário, faça testes no
programa em C.
a) Explique a diferença entre
 p++;            (*p)++;           *(p++);
b) O que quer dizer *(p+10);?
    
 c) Explique o que você entendeu da comparação entre ponteiros (veja apostila
páginas 54 e 55)
    
3. Qual o valor de y no final do programa? Tente primeiro descobrir e
depois verifique no computador o resultado. A seguir, escreva um  /*
comentário */ em cada comando de atribuição explicando o que ele
faz e o valor da variável à esquerda do '=' após sua execução.
int main()
{
       int y, *p, x;
       y = 0;
       p = &y;
       x = *p;
       x = 4;
       (*p)++;
       x­­;
       (*p) += x;
       printf ("y = %d\n", y);
       return(0);
}
4. Reescreva o programa abaixo  usando ponteiros
int main ()
{
      float matrx [50][50];
      int i,j;
      for (i=0;i<50;i++)
            for (j=0;j<50;j++)
                   matrx[i][j]=0.0;
      return(0);
}
5. Diga quais expressoes abaixo sao válidas ou não. Considere as
declarações
int vetor[10];
int *ponteiro;
a) vetor = vetor + 2; 
b) vetor++;           
c) vetor = ponteiro;  
 d) ponteiro = vetor;      
 e) ponteiro = vetor+2;   
6. Explique o que faz o programa abaixo
main(){
      float vet[5] = {1.1,2.2,3.3,4.4,5.5};
      float *f;
      int i;
      f = vet;
      printf("contador/valor/valor/endereco/endereco");
      for(i = 0 ; i <= 4 ; i++){
            printf("\ni = %d",i);
            printf("   vet[%d] = %.1f",i, vet[i]);
            printf("   *(f + %d) = %.1f",i, *(f+i));
            printf("   &vet[%d] = %X",i, &vet[i]);
            printf("   (f + %d) = %X",i, f+i);
      }
}
7. Assumindo que M1[] é um vetor do tipo int, quais das seguintes
expressões referenciam o valor do terceiro elemento de M1?
a) *(M1 + 2)          b) *(M1 + 4)             c) M1 + 4                       d) M1 + 2
8. Considere a declaração:
int mat[4], *p, x; 
Quais expressões são válidas? Justifique:
a) p = mat + 1;       b) p = mat++;      c) p = ++mat;      d) x = (*mat)++;
9. Faça um programa usando ponteiros, para ordenar 5 números e
mostrá­los ordenados na tela.
10. Explique o que o progama abaixo faz
main() {
      int vet[] = {4,9,12};
      int i,*ptr;
      ptr = vet;
      for(i = 0 ; i < 3 ; i++) {
           printf("%d ",*ptr++);
      }
}
11.Seja vet um vetor de 4 elementos: TIPO vet[4]. Supor que depois da
declaração, vet esteja armazenado no endereço de memória 4092 (ou
seja, o endereço de vet[0]). Supor também que na máquina usada
uma variável do tipo char ocupa 1 byte, do tipo int ocupa 2 bytes, do
tipo float ocupa 4 bytes e do tipo double ocupa 8 bytes.
Qual o valor de vet+1, vet+2 e vet+3 se:
a)      vet for declarado como char?
b)      vet for declarado como int?
c)      vet for declarado como float?
d) vet for declarado como double?
12.Considere um micro cujo barramento de endereços possui 16 bits.
Considere um ponteiro p apontando para a primeira posição de
memória da figura abaixo.
120A AB
120B 01
FF
ED
34
4C
Responda:
qual o valor de p?
qual o valor de *p?
qual o valor de &p
qual o valor de *(p+1)?
qual o valor de (p+5)?
qual o valor de (p+A)?
qual o valor de *(p+2)?
13.Verifique o programa abaixo. Encontre o seu erro e corrija­o para
que escreva o numero 10 na tela.
#include <stdio.h>
int main()
{
      int x, *p, **q;
      p = &x;
      q = &p;
      x = 10;
      printf("\n%d\n", &q);
      return(0);
}
14. Escreva um programa que declare uma matriz 100x100 de inteiros.
Você deve inicializar a matriz com zeros usando ponteiros para endereçar
seus elementos. Preencha depois a matriz com os números de 1 a 10000,
também usando ponteiros.


==== LISTA 2 - http://www.ime.usp.br/~macmulti/exercicios/vetores/index.html

Exercícios com Vetores


1.  Dada uma seqüência de n números, imprimi-la na ordem inversa à da leitura. 

               Solução em C
2.  Deseja-se publicar o número de acertos de cada aluno em uma prova em forma de testes. A prova consta de 30 questões, cada uma com cinco alternativas identificadas por A, B, C, D e E. Para isso são dados:

o cartão gabarito;
o número de alunos da turma;
o cartão de respostas para cada aluno, contendo o seu número e suas respostas. 

               Solução em C
               Solução em Pascal
3.  Tentando descobrir se um dado era viciado, um dono de cassino honesto (ha! ha! ha! ha!) o lançou n vezes. Dados os n resultados dos lançamentos, determinar o número de ocorrências de cada face. 

4.  Dados dois vetores x e y, ambos com n elementos, determinar o produto escalar (1) desses vetores. 

               Solução em C
               Solução em Pascal
5.  Faça um programa para resolver o seguinte problema: 
São dadas as coordenadas reais x e y de um ponto, um número natural n, e as coordenadas reais de n pontos (1 < n < 100). Deseja-se calcular e imprimir sem repetição os raios das circunferências centradas no ponto (x,y) que passam por pelo menos um dos n pontos dados.

Exemplo : (x,y) = (1.0, 1.0) ; n = 5
pontos : (-1.0, 1.2) , (1.5, 2.0) , (0.0, -2.0) , (0.0, 0.5) , (4.0, 2.0)
Nesse caso há três circunferências de raios: 1.12,  2.01 e 3.162.
Observações:
Distância entre os pontos (a,b) e (c,d) é 
Dois pontos estão na mesma circunferência se estão à mesma distância do centro.


6.  (COMP 89) Dados dois strings (um contendo uma frase e outro contendo uma palavra), determine o número de vezes que a palavra ocorre na frase.

Exemplo: 
Para a palavra ANA e a frase :
ANA E MARIANA GOSTAM DE BANANA (2)
Temos que a palavra ocorre 4 vezes na frase.


               Solução em Pascal
7.  (MAT 88) Dada uma seqüência de n números reais, determinar os números que compõem a seqüência e o número de vezes que cada um deles ocorre na mesma.

Exemplo: n = 8
Seqüência: -1.7,  3.0,  0.0,  1.5,  0.0, -1.7,  2.3, -1,7
Saída:       -1.7 ocorre 3 vezes 
                   3.0 ocorre 1 vez 
                   0.0 ocorre 2 vezes 
                   1.5 ocorre 1 vez 
                   2.3 ocorre 1 vez


               Solução em C
               Solução em Pascal
8.  Dados dois números naturais m e n e duas seqüências ordenadas com m e n números inteiros, obter uma única seqüência ordenada contendo todos os elementos das seqüências originais sem repetição.

Sugestão: Imagine uma situação real, por exemplo, dois fichários de uma biblioteca.


               Solução em Pascal
9.  Dadas duas seqüências com n números inteiros entre 0 e 9, interpretadas como dois números inteiros de n algarismos, calcular a seqüência de números que representa a soma dos dois inteiros.

Exemplo: n = 8,
1ª  seqüência	      8    2    4    3    4    2    5    1
2ª  seqüência	+    3    3    7    5    2    3    3    7 
1    1    6    1    8    6    5    8    8


               Solução em Pascal
10.  Calcule o valor do polinômio   p(x)=a0+a1x+...+anxn em k pontos distintos. São dados os valores de n (grau do polinômio), de   a0, a1, ..., an   (coeficientes reais do polinômio), de k e dos pontos  x1, x2, ..., xk. 

11.  Dado o polinômio   p(x)=a0+a1x+...+anxn, isto é, os valores de n e de   a0, a1, ..., an  , determine os coeficientes reais da primeira derivada de p(x). 

12.  Dado um polinômio   p(x)=a0+a1x+...+anxn, calcular o polinômio q(x) tal que p(x)= (x-  ).q(x) + p( ), para m valores distintos de  (Usar o método de Briot-Ruffini) (3). 

13.  Dados dois polinômios reais   p(x)=a0+a1x+...+anxn e   q(x)=b0+b1x+...+bmxm determinar o produto desses polinômios. 

14.  (POLI 82) Chama-se seqüência de Farey relativa a n, a seqüência das frações racionais irredutíveis, dispostas em ordem crescente, com denominadores positivos e não maiores que n.

Exemplo:  Se n=5, os termos  da seqüência de Farey, tais que 0 <   < 1 são:

Para gerarmos os termos   de uma seqüência de Farey tais que 0 <   < 1, podemos usar o seguinte processo. Começamos com as frações
,
e entre cada duas frações consecutivas
,
introduzimos a fração:

e assim sucessivamente enquanto j + m < n. Quando não for mais possível introduzir novas frações teremos gerado todos os termos da seqüência de Farey relativa a n, tais que 0 <  < 1.

Usando o processo descrito, determine os termos , 0 <  < 1, da seqüência de Farey relativa a n, n inteiro positivo.

Sugestão: Gere os numeradores e os denominadores em dois vetores.


15.  Em uma classe há n alunos, cada um dos quais realizou k provas com pesos distintos. Dados n , k, os pesos das k provas e as notas de cada aluno, calcular a média ponderada das provas para cada aluno e a média aritmética da classe em cada uma das provas. 

16.  (QUIM 84) Dada uma seqüência   x1, x2, ..., xk de números inteiros, verifique se existem dois segmentos consecutivos iguais nesta seqüência, isto é, se existem i e m tais que:

xi, xi+1,..., xi+m-1 = xi+m, xi+m+1,..., xi+2m-1
Imprima, caso existam, os valores de i e m.

Exemplo: Na seqüência  7, 9, 5, 4, 5, 4, 8, 6 existem i=3 e m=2.


               Solução em C
               Solução em Pascal
17.  Dada uma seqüência de n números inteiros, determinar um segmento de soma máxima.

Exemplo: Na seqüência 5, 2, -2, -7, 3, 14, 10, -3, 9, -6, 4, 1 , a soma do segmento é 33.


18.    (POLI 88) Simule a execução do programa abaixo destacando a sua saída:

#include <stdio.h
int main()
{ 
  int n, inic, fim, i, aux, para, a[100];

  printf("Digite n: ");
  scanf("%d", &n); 
  printf("n = %d\n", n);
  printf("Digite uma sequencia de %d numeros.\n", n);
  for (i = 0; i < n; i++) { 
    scanf("%d", &a[i]); 
    printf("%d ", a[i]); 
  }
  printf("\n");
  inic = 0; 
  fim  = n - 1; 
  aux  = a[inic];
  while (inic < fim) { 
    para = 0;
    while ((inic < fim) && !para) { 
      if (a[fim] <= aux) 
        para = 1;
      else 
        fim = fim - 1;
    }
    if (para) {
      a[inic] = a[fim]; 
      inic = inic + 1; 
      para = 0;
      while ((inic < fim) && !para) { 
        if (a[inic] <= aux) 
          inic = inic + 1;
        else 
          para = 1;
      }
      if (para) {
        a[fim] = a[inic]; 
        fim = fim - 1;
      }
    }
    for (i = 0; i < n; i++) 
      printf("%d ", a[i]);
    printf("\n");
  } 
  a[inic] = aux;
  for (i = 0; i < n; i++) 
    printf("%d ", a[i]);
  printf("\n");
  return 0;
}
Dados: 
    7 
    10    3    6    12    13    7    15 


====== LISTA 3 - http://www.ime.usp.br/~macmulti/exercicios/matrizes/index.html

Exercícios com Matrizes


1.  Dada uma matriz real A com m linhas e n colunas e um vetor real V com n elementos, determinar o produto de A por V. 

2.  Um vetor real X com n elementos é apresentado como resultado de um sistema de equações lineares Ax = B cujos coeficientes são representados em uma matriz real Amxn e os lados direitos das equações em um vetor real B de m elementos. Verificar se o vetor X é realmente solução do sistema dado. 

3.  Dadas duas matrizes reais  Amxn e Bnxp, calcular o produto de A por B. 

               Solução em C
               Solução em Pascal
4.  Dada uma matriz real  Amxn, verificar se existem elementos repetidos em A. 

5.  Dizemos que uma matriz inteira Anxn  é uma matriz de permutação se em cada linha e em cada coluna houver n-1 elementos nulos e um único elemento igual a 1.

Exemplo: 
A matriz abaixo é de permutação:

Observe que

não é de permutação.
Dada uma matriz inteira Anxn, verificar se A é de permutação. 
  

6.  Dada uma matriz  Amxn, imprimir o número de linhas e o número de colunas nulas da matriz.

Exemplo: m = 4 e n = 4


tem 2 linhas nulas e 1 coluna nula.


7.  Dizemos que uma matriz quadrada inteira é um quadrado mágico (1) se a soma dos elementos de cada linha, a soma dos elementos de cada coluna e a soma dos elementos das diagonais principal e secundária são todas iguais.

Exemplo: A matriz

é um quadrado mágico.
Dada uma matriz quadrada Anxn , verificar se A é um quadrado mágico. 
  

8.  (a) (MAT 83) Imprimir as n primeiras linhas do triângulo de Pascal (2).

1                                                                                 

1    1                                                                  

1    2    1                                                  

1    3    3    1                                  

1    4    6    4    1                  

1    5   10   10    5    1
:
(b) Imprimir as n primeiras linhas do triângulo de Pascal usando apenas um vetor. 

9.  (MAT 89) Um jogo de palavras cruzadas pode ser representado por uma matriz  Amxn  onde cada posição da matriz corresponde a um quadrado do jogo, sendo que 0 indica um quadrado branco e -1 indica um quadrado preto. Indicar na matriz as posições que são início de palavras horizontais e/ou verticais nos quadrados correspondentes (substituindo os zeros), considerando que uma palavra deve ter pelo menos duas letras. Para isso, numere consecutivamente tais posições.

Exemplo: Dada a matriz


A saída deverá ser


 


               Solução em C
10.  Uma matriz  D8x8  pode representar a posição atual de um jogo de damas (3), sendo que 0 indica uma casa vazia, 1 indica uma casa ocupada por uma peça branca e -1 indica uma casa ocupada por uma peça preta. Supondo que as peças pretas estão se movendo no sentido crescente das linhas da matriz D, determinar as posições das peças pretas que:

(a) podem tomar peças brancas;

(b) podem mover-se sem tomar peças;

(c) não podem se mover. 
  
  

11.  (FEA 85) Deseja-se atualizar as contas correntes dos clientes de uma agência bancária. É dado o cadastro de n clientes contendo para cada cliente o número de sua conta e o seu saldo; o cadastro está ordenado pelo número da conta. Em seguida, é dado o número de operações efetuadas no dia e, para cada operação, o número da conta, uma letra C ou D indicando se a operação é de crédito ou débito e o valor da operação . Emitir o cadastro de clientes atualizado. 

12.  (FEA 68) Deseja-se fazer a emissão da folha de pagamento de uma empresa. Para cada um dos n funcionários da empresa são dadas as seguintes informações:

NOME 
SAL (salário) 
HED (horas extras diurnas) 
HEN (horas extras noturnas) 
ND (número de dependentes) 
FAL (faltas em horas) 
DE (descontos eventuais) 
REF (gastos com refeições feitas na empresa) 
VAL (vales retirados durante o mês).
Emitir as seguintes informações:
nome, 
salário, 
horas extras = HED * SAL/160 + HEN * 1.2 * SAL/160, 
salário família = ND * 0.05 * salário mínimo vigente, 
salário bruto = salário + horas extras + salário família.
Descontos efetuados:
INAMPS = 0.08 * SAL, 
faltas = FAL * SAL/160, 
refeições, 
vales, 
descontos eventuais, 
imposto de renda = 0.08 * salário bruto.
Salário líquido = salário bruto - desconto total. 

13.  Um campeonato de futebol foi disputado por n times identificados pelos seus nomes. Para cada time são considerados os seguintes dados:

PG - número de pontos ganhos (2 por vitória, 1 por empate, 0 por derrota) 

GM - número de gols marcados 

GS - número de gols sofridos (gols difíceis de marcar) 

S  - saldo de gols (GM - GS para os não atletas) 

V  - número de vitórias 

GA - gol average (GM / GS, cuidado se GS = 0 )
(a) Dados os resultados de m jogos, imprima uma tabela com todos os dados (PG, GM, GS, S, V, GA, igual àquela que sai no jornal) dos n times. Cada resultado é representado na forma (t1,t2,n1,n2) cuja interpretação é a seguinte: no jogo t1 x t2 o resultado foi n1 x n2.
Exemplo: (São Paulo, Milan, 3, 2) que foi o placar da vitória que deu ao São Paulo o BICAMPEONATO MUNDIAL.
(b) Com os mesmos dados do item (a), imprima a classificação dos times no campeonato (do primeiro para o último). A classificação é pelo número de pontos ganhos (PG) e em segundo lugar pelo saldo de gols (S). Se houver empate segundo os dois critérios, classifique os times envolvidos como quiser (por exemplo, pelas regras do campeonato paulista de 1975 (4)).
(c) Um grupo de torcedores organizou um bolo (5) sobre os resultados dos m jogos. Cada resultado certo vale 5 pontos (inclusive o placar) ou 3 pontos (apenas o vencedor ou empate). Com os dados do item (a) e mais os palpites que são compostos de m pares de números inteiros , onde o par representa o palpite do i-ésimo jogo, descubra o nome do ganhador do bolão. 

14.  (POLI 94) Os elementos aij de uma matriz inteira Anxn representam os custos de transporte da cidade i para a cidade j. Dados n itinerários, cada um com k cidades, calcular o custo total para cada itinerário.

Exemplo:


O custo do itinerário 0 3 1 3 3 2 1 0 é
a03 + a31 + a13 + a33 + a32 + a21 + a10 = 3 + 1 + 400 + 5 + 2 + 1 + 5 = 417


15.  Considere n cidades numeradas de 0 a n-1 que estão interligadas por uma série de estradas de mão única. As ligações entre as cidades são representadas pelos elementos de uma matriz quadrada  Lnxn, cujos elementos lij assumem o valor 1 ou 0, conforme exista ou não estrada direta que saia da cidade i e chegue à cidade j. Assim, os elementos da linha i indicam as estradas que saem da cidade i, e os elementos da coluna j indicam as estradas que chegam à cidade j.

Por convenção lii = 1. A figura mostra um exemplo para n = 4. 
 
(a) Dado k, determinar quantas estradas saem e quantas chegam à cidade k.

(b) A qual das cidades chega o maior número de estradas?

(c) Dado k, verificar se todas as ligações diretas entre a cidade k e outras são de mão dupla.

(d) Relacionar as cidades que possuem saídas diretas para a cidade k.

(e) Relacionar, se existirem:

i. As cidades isoladas, isto é, as que não têm ligação com nenhuma outra; 
ii. As cidades das quais não há saída, apesar de haver entrada; 
iii. As cidades das quais há saída sem haver entrada. 
 
(f) Dada uma seqüência de m inteiros cujos valores estão entre 0 e n-1, verificar se é possível realizar o roteiro correspondente. No exemplo dado, o roteiro representado pela seqüência (m=5) 2 3 2 1 0 é impossível.
(g) Dados k e p, determinar se é possível ir da cidade k para a cidade p pelas estradas existentes. Você consegue encontrar o menor caminho entre as duas cidades?

h) Dado k, determinar se é possível, partindo de k, passar por todas as outras cidades apenas uma vez e retornar a k. 
    Sugestões:

i. Pule esse item. 
ii. Teste todas as possibilidades.

===== Lista 4 - http://www.ime.usp.br/~macmulti/exercicios/funcoes3/index.html

Exercícios com Funções - Parte III


1.  (POLI 94) Um conjunto pode ser representado por um vetor da seguinte forma: V[0] é o tamanho do conjunto; V[1], V[2], etc. são os elementos do conjunto (sem repetições).

        (a) Faça uma função chamada intersecção que dados dois conjuntos de números inteiros A e B, constrói um terceiro conjunto C que é a intersecção de A e B. Lembre-se de que em C[0] a sua função deve colocar o tamanho da intersecção.

        (b) Faça um programa que lê um inteiro n > 1 e uma seqüência de n conjuntos de números inteiros (cada um com no máximo 100 elementos) e constrói e imprime um vetor INTER que representa a intersecção dos n conjuntos.

Por exemplo, se n=3 e os conjuntos são {1, 2, 4, 9}, {2, 4, 7, 8, 9} e {5, 4, 9}, a entrada será:
3	O valor de n
 	 
4	V[0] = tamanho do primeiro conjunto
1 2 4 9	V[1]  V[2]  V[3]  V[4]
 	 
5	V[0] = tamanho do segundo conjunto
2 4 7 8 9	V[1]  V[2]  V[3]  V[4]  V[5]
 	 
3	V[0] = tamanho do terceiro conjunto
5 4 9	V[1]  V[2]  V[3]
E o vetor INTER construído será
INTER[0] = 2	 	tamanho do conjunto
INTER[1] = 4	INTER[2] = 9	conjunto intersecção
NOTE que não é preciso ler todos os conjuntos de uma só vez. Você pode ler os dois primeiros conjuntos e calcular a primeira intersecção. Depois, leia o próximo conjunto e calcule uma nova intesecção entre esse conjunto lido e o conjunto da intersecção anterior, e assim por diante.
Use obrigatoriamente a  função do item anterior, mesmo que você não a tenha feito. 

2.  (a) Escreva uma função que lê, linha a linha, uma matriz real Amxn

        (b) Escreva uma função que imprime uma matriz real  Amxn 

3.  (a) Escreva uma função que calcula a soma dos elementos da linha i de uma matriz real Amxn.

        (b) Escreva uma função que calcula o produto dos elementos da coluna j de uma matriz real Amxn. 

4.  (a) Escreva uma função que troca o conteúdo de duas variáveis.

        (b) Escreva uma função que recebe dois inteiros, i e j, uma matriz real Amxne troca linha i pela linha j. Utilize a função do item anterior. 

5.  (POLI 97) 
        (a) Faça uma função MAX que recebe como entrada um inteiro n, uma matriz inteira Anxn e devolve três inteiros: k, Lin e Col. O inteiro k é um maior elemento de A e é igual a A[Lin,Col]. 
        Exemplo:


Obs.: Se o elemento máximo ocorrer mais de uma vez, indique em Lin e Col qualquer uma das possíveis posições.
        (b) Faça um programa que, dado um inteiro n e uma matriz quadrada de ordem n, cujos elementos são todos inteiros positivos, imprime uma tabela onde os elementos são listados em ordem decrescente, acompanhados da indicação de linha e coluna a que pertencem. Havendo repetições de elementos na matriz, a ordem é irrelevante. Utilize obrigatoriamente o procedimento da parte (a), mesmo que você não o tenha feito.
        Ex.: No caso da matriz acima, a saída poderia ser:

Elem	Linha	Coluna
8	1	2
7	
0
1
5	2	0
4	2	2
3	0	0
3	2	1
2	1	1
1	0	2
1	1	0


6.  Escreva uma função que recebe uma matriz de caracteres 8x8 representando um tabuleiro de xadrez e calcula o valor total das peças do jogo. Espaços vazios do tabuleiro são codificados como casas com ` '(branco) e têm valor 0 (zero). O valor das demais peças é dado de acordo com a tabela: 
 

Peça	
Valor
peão	
1
cavalo	
3
bispo	
3
torre	
5
rainha	
10
rei	
50


7.  (a) Escreva uma função que recebe como parâmetros um vetor real A com n elementos e um vetor real B com m elementos, ambos representando conjuntos, e verifica se A está contido em B (A B).

        (b) Usando a função do item acima verifique se dois conjuntos são iguais (A = B se e somente se  A  B e B  A ) . 

8.  (a) Escreva uma função que recebe uma matriz real Amxn  e determina a sua transposta (Se B é a matriz transposta de A então aij = bji).

        (b) Escreva uma função que calcula o produto escalar de dois vetores dados.

        (c) Dada uma matriz real Xmxn, usando as funções acimas, calcule o produto X x Xt  .

        (d) Faça uma função que verifica se uma matriz Amxm  é a matriz identidade.

        (e) Ache uma aplicação para esse exercício. 

9.  (a) Dado um vetor real X com n elementos e um certo índice k, escreva uma função que determina o índice do elemento mínimo entre X[k], X[k+1], ..., X[n-1].

        (b) Usando a função do item anterior coloque os elementos de um vetor em ordem crescente. 

10.  Para encontrar uma raiz de um polinômio   p(x)=a0+a1x+...+anxn, (n > 2), pode-se aplicar o método de Newton (1), que consiste em refinar uma aproximação inicial x0 dessa raiz através da expressão:


n= 0,1,2,...,  onde p'(x) é a primeira derivada de p(x).
    Usualmente, repete-se esse refinamento até que |xn+1 - xn | < ,   > 0, ou até que m iterações tenham sido executadas. 
    Dados um polinômio   p(x)=a0+a1x+...+anxn, uma aproximação inicial x0 da raiz de p(x),   > 0 e o número máximo de iterações que devem ser executadas, determine uma aproximação da raiz de p(x) pelo método de Newton. Utilize uma função que, dado um polinômio p(x), calcula a derivada p'(x) e, para calcular p(xn) e p'(xn) em cada iteração, uma função que calcula o valor de um polinômio em um ponto. 

11.  (a) Escreva uma função que recebe como parâmetros:

dois inteiros positivos n e m;
uma matriz Anxm ;
o índice c de uma coluna;
os índices k e p de duas linhas,
e ordena entre as linhas k e p da matriz A segundo a coluna c.
Exemplo: 
n=6,    m=3 
c=1, 
k=0,     p=4

        (b) Dadas n datas em uma matriz DATAnx3  , onde a primeira coluna corresponde ao dia, a segunda ao mês e a terceira ao ano, coloque essas datas em ordem cronológica crescente, usando a função acima.
Exemplo: n = 6,
 
 



12.  (a) Escreva uma função que recebe como parâmetros uma matriz de caracteres NOMESmxn , os índices i e j de duas linhas e que troca os elementos da linha i com os da linha j.

        (b) Escreva uma função que recebe como parâmetros uma matriz NOMESmxn, os índices i e j de duas linhas e que devolve valor 1 se o nome na linha i é maior ou igual ao da linha j (ordem alfabética) e 0 caso contrário.

        (c) São dados n nomes que serão armazenados em uma matriz  NOMESmxn. Coloque os nomes dessa matriz em ordem alfabética usando as funções descritas acima. 

13.  (FEA 88) 
        (a) Escreva uma função que recebe como parâmetros uma matriz real  Anxm , e uma posição (i,j) da matriz, e calcula a média aritmética dos vizinhos de (i,j), ou seja, a média entre Ai-1, j   , Ai+1, j   ,  Ai, j+1   ,Ai, j+1.  Desconsidere os vizinhos que não pertencem a matriz (por exemplo, os vizinhos de (0, 0) são somente (0,1) e (1,0) ).

        (b) Escreva uma função que recebe como parâmetro uma matriz real   Anxm e devolve uma matriz  Amédia, onde aijmédia é a média aritmética dos vizinhos de (i,j). Para isto, utilize a função do item anterior.

        (c) Escreva um programa que lê uma matriz real  Anxm , e um número inteiro k; utilizando a função do item anterior, o programa deve transformar a matriz k vezes, imprimindo a matriz inicial e depois de cada transformação.


               Solução em Pascal
14.  Dizemos que uma matriz Anxn  é um quadrado latino de ordem n se em cada linha e em cada coluna aparecem todos os inteiros 1,2,3,...,n (ou seja, cada linha e coluna é permutação dos inteiros 1,2,...,n).

         Exemplo:


         A matriz acima é um quadrado latino de ordem 4.
        (a) Escreva uma função que recebe como parâmetros um inteiro n, um vetor V com n inteiros e verifica se em V ocorrem todos os inteiros de 1 a n.
        (b) Usando a função acima, verifique se uma dada matriz inteira Anxn   é um quadrado latino de ordem n. 

15.  
        (a) Faça uma função que transforma um número num vetor correspondente à sua representação binária.

        (b) Dados inteiros positivos n e m, e os vetores ReprN e ReprM correspondentes à representação binária dos números n e m, considere a seguinte matriz A de caracteres:

`*' se ReprN[i]= 1 e ReprM[j]= 1

`  ' caso contrário

        Faça um programa que recebe n e m, e constrói a matriz A descrita acima, usando o item (a). 

16.  (POLI 96) Dada uma matriz real quadrada A de ordem n e um inteiro positivo k, define-se a aproximação da matriz real eA pela soma abaixo:



sendo In a matriz identidade de ordem n.
        (a) Faça uma função que recebe como parâmetros um inteiro n e duas matrizes quadradas reais X e Y de ordem n. Esta função devolve em uma matriz Z, também passada como parâmetro, a soma das matrizes X e Y.
        (b) Escreva uma função que recebe como parâmetro um número inteiro n, um número real c e uma matriz Xnxn. A função devolve em uma matriz Y, também passada como parâmetro, o produto do número c pela matriz X. Ou seja,

            Yi,j = c * Xi,j    para      0< i < n-1    e   0 < j < n-1

        (c) Escreva uma função que recebe como parâmetros um inteiro n e duas matrizes quadradas reais Xnxn e Ynxn. Esta função devolve em uma matriz Z, também passada como parâmetro, o produto das matrizes X e Y.
        (d) Faça um programa que, dados dois inteiros n e k e uma matriz real quadrada Anxn, determina uma aproximação da matriz real eA utilizando obrigatoriamente as três funções mencionadas anteriormente. 

17.  (POLI 86) Este problema consta de três partes: 
        (a) Escreva uma função de nome Início com os seguintes parâmetros de entrada:

um vetor alfanumérico V com n elementos;
um inteiro n.

O valor da função deve ser o índice da posição onde se inicia a última palavra de V (isto é, o índice da primeira letra dessa palavra).

Exemplo:

E	S	S	E	 	É	 	F	Á	C	I	L	!
        O valor da função deve ser 7.
        (b) Escreva uma função de nome Insere com os seguintes parâmetros:

uma matriz alfanumérica T;
dois inteiros m e n;
um inteiro k.
A função insere uma nova linha preenchida com brancos, entre as linhas k e k+1 da matriz T, devolvendo a nova matriz T(m+1)xn.
  
(c) Faça um programa que:
lê e imprime dois inteiros m e n e uma matriz alfanumérica Amxn onde cada elemento contém um único caractere;
elimina (conforme explicado abaixo) as ``quebras'' de palavras entre uma linha e outra, do texto armazenado em A;
imprime o novo conteúdo da matriz A.
Diz-se que existe ``quebra'' de palavras entre uma linha e outra somente quando o último caractere da linha e o primeiro da linha seguinte são ambos diferentes de branco. Exemplo: (2) 
 
O	 	Q	U	E	 	É	 	B	O	M	 	A	 	G	E
N	T	E	 	F	A	T	U	R	A	,	 	O	 	Q	U
E	 	É	 	R	U	I	M	 	A	 	G	E	N	T	E
 	E	S	C	O	N	D	E	.	 	 	 	 	 	 	 

 
A eliminação da ``quebra'' deve ser feita inserindo-se uma nova linha, que será ocupada apenas pela palavra ``quebrada''. As posições anteriormente ocupadas pela palavra devem passar a conter brancos.

Supõe-se que qualquer palavra do texto caiba inteiramente em uma linha.

No exemplo acima, o novo conteúdo da matriz A, após eliminar a ``quebra'' da palavra GENTE, seria: 
 
O	 	Q	U	E	 	É	 	B	O	M	 	A	 	 	 
G	E	N	T 	E	 	 	 	 	 	 	 	 	 	 	 
 	 	 	 	F	A	T	U	R 	A	, 	 	O	 	Q	U
E 	 	É	 	R	U	I	M	 	A 	 	G 	E 	N 	T 	E 
 	E	S	C	O	N	D	E	.	 	 	 	 	 	 	 
Use obrigatoriamente as funções definidas nos itens (a) e (b) (mesmo que você não as tenha feito).

Observação: no texto existe pelo menos um branco separando duas palavras consecutivas, mesmo que elas estejam em linhas diferentes.


               Solução em Pascal
18.  Considere um exame de vestibular em que as questões são do tipo teste. Deseja-se obter uma lista com o nome, o número de identificação e o número de pontos de cada um dos candidatos, em ordem decrescente de pontos. A resolução deste problema será dividida em três partes:

(a) Escreva uma função Pontos com os seguintes parâmetros:

um inteiro XN;
um vetor inteiro XResp, onde XResp[i] é a resposta à questão i dada por um candidato;
um vetor inteiro XGab, onde XGab[i] é a resposta correta à questão i.

O valor que esta função deve assumir é o número de pontos feitos pelo candidato cujas respostas estão armazenadas em XResp.

(b) Escreva uma função Insere com os seguintes parâmetros: 
 

um vetor A contendo as informações de vários candidatos: nome, número de identificação e número de pontos, classificado em ordem decrescente pelo número de pontos;
um inteiro NA que representa o número de elementos de A;
InfoCandidato contendo as informações de um candidato.

        Esta função insere o candidato InfoCandidato no vetor A, de modo que os candidatos continuem armazenados por ordem decrescente de pontos.

(c) Escreva um programa que recebe como dados: 
 

um inteiro n, que representa o número de questões de um exame vestibular;
um vetor inteiro Gab, contendo o gabarito das n questões;
um inteiro m, que é o número de candidatos que prestam o vestibular;
o nome de cada candidato, o seu número de identificação e suas respectivas respostas.

        e constrói um vetor contendo o nome, o número de identificação e o número de pontos alcançados por cada candidato, em ordem decrescente de pontos. 
        Utilize obrigatoriamente as funções Pontos e Insere, mesmo que você não as tenha feito. 

19.  (POLI 96) Uma função matemática pode ser representada por um vetor. Por exemplo, com n = 5 e o vetor de tamanho n[0.0, 0.5, 1.0, 1.5, 2.0] estamos representando a função f(i)=i/2, i=0,1,2,3,4.

O alisamento de uma função é definido como: 
 


g(0) = g(1);
g(n-1) = g(n-2).

    Para o exemplo acima, temos:
0.0
0.5
1.0
1.5
2.0
função f
0.5
0.5
1.0
1.5
1.5
alisamento g
0.66...
0.66...
1.0
1.33...
1.33...
alisamento de g
  Obs.: Não utilize variáveis globais para escrever as funções abaixo.
(a) Escreva uma função alisa que recebe um vetor real F com n elementos e devolve um vetor G contendo o alisamento da função representada em F.

(b) Escreva uma função realisa que recebe m,n inteiros e um vetor F de n números reais e retorne em uma matriz de números reais  Amxn  os m alisamentos sucessivos da função representada em F. Cada vetor deverá ser armazenado em um linha da matriz.

(c) Escreva uma função avalia que recebe os números inteiros m,n e um vetor F de n números reais e, utilizando obrigatoriamente a função do item anterior (se não o fez, escreva apenas o protótipo) retorne quais são os valores máximo e mínimo da representação do m-ésimo alisamento de F. 
  

20.  Simule a execução do seguinte programa, destacando a sua saída.

#include <stdio.h>

/* Variavel Global */
int i;

void p1(int x)
{ 
  i = i + 1; 
  x = x + 2;
  printf("%d\n", x);
}

void p2(int *x)
{ 
  i  =  i + 1; 
  *x = *x + 2;
  printf("%d\n", *x);
}

int main()
{ 
  /* Variavel Local */
  int a[2];

  a[0] = 10; 
  a[1] = 20;
  printf("%d %d\n", a[0], a[1]);
  i = 0; 
  p1(a[i]);
  printf("%d %d\n", a[0], a[1]);
  a[0] = 10; 
  a[1] = 20;
  i = 0; 
  p2(&a[i]);
  printf("%d %d\n", a[0], a[1]);
  return 0;
}


               Resultado da Simulação
21.  (POLI 87) Simule a execução do programa abaixo destacando a sua saída:

int main()
{ 
  int m, x, nv, i, k, achou, b[50], v[50];

  printf("Digite o tamanho da sequencia: ");
  scanf("%d", &m); 
  printf("Tamanho = %d\n", m);
  for (i = 0; i < m; i++) { 
    scanf("%d", &b[i]); 
    printf("%d ", b[i]); 
  }
  printf("\n");
  i = 0; 
  achou = 0;
  while (!achou && (i<m)) { 
    constroi(b, m, b[i], v, &nv);
    printf("Elemento = %d\n", b[i]);
    for (k = 0; k < nv; k++) 
      printf("%d ", v[k]);
    printf("\n"); 
    printf("Total = %d\n", nv);
    if (nv == m/2) 
      achou = 1;
    else 
      i = i + 1; 
  } 
  if (achou) {  
    printf("Achou o %d\n", b[i]);
    for (k = 0; k < nv; k++) 
      printf("%d ", b[v[k]]);
    printf("\n");
  } 
  constroi(b, m, 20, v, &nv);
  printf("Elemento = 20\n");
  for (k = 0; k < nv; k++) 
    printf("%d ", v[k]);
  printf("\n"); 
  return 0;
}
Dados: 
6 
25  13  18  37  12  10 

               Resultado da Simulação
22.  (POLI 88) Simule a execução do programa abaixo destacando a sua saída:

#include <stdio.h>
#define max 50

void imprime(int a[][max], int n)
{ 
  int i, j;
  for (i = 0; i < n; i++) { 
    for (j = 0; j < n; j++) 
      printf("%2d ", a[i][j]);
    printf("\n");
  }
}

void soma(int a[][max], int b[][max], int n)
{ 
  int i, j;

  for (i = 0; i < n; i++)
    for (j = 0; j < n; j++) 
      a[i][j] = a[i][j] + b[i][j]; 
}

int main()
{ 
  int i, j, n, a[max][max], b[max][max];

  printf("Digite n: ");
  scanf("%d", &n); 
  printf("n = %d\n", n);
  for (i = 0; i < n; i++)
    for (j = 0; j < n; j++)
      scanf("%d", &a[i][j]);
  for (i = 0; i < n; i++)
    for (j = 0; j < n; j++)
      scanf("%d", &b[i][j]);
  imprime(a, n); 
  imprime(b, n);  
  soma(a, b, n);
  imprime(a, n); 
  imprime(b, n);
  return 0;
}
Dados: 
  2 
  4    1 
-2    8 
  2  -1 
  5    4 

               Resultado da Simulação
23.  (POLI 96) Simule a execução do seguinte programa, mostrando todos os valores intermediários gerados para cada variável e destacando a sua saída.

#include <stdio.h>

int g;

int fa(int m[20][20], int a, int cte, int *p1, int p2)
{ 
  int i, j;

  g = *p1;
  *p1 = p2;
  p2 = g;
  for (i = 0; i < a; i++)
    for (j = 0; j < a; j++)
      m[i][j] = (3*i+j+cte)%5;
  printf("%d %d\n", m[0][0], m[0][1]);
  printf("%d %d\n", m[0][0], m[0][1]);
  printf("%d %d %d\n", g, *p1, p2);
  return(cte);
}

void flin(int m[], int i)
{ 
  int g;
 
  for (g = 0; g < i; g++) 
    printf("%d ", m[g]);
  printf("\n");
}

void fpr(int m[20][20], int a)
{
  int i;

  for (i = 0; i < a; i++) 
    flin(m[i], a);
}

int main()
{ 
  int m[20][20], p1, p2, i, num;
  char c, s[20];
  float x, y;

  g = 0;
  printf("Digite um numero: ");
  scanf("%d", &num);
  printf("num = %d, g = %d\n", num, g);
  p1 = 1;
  p2 = 3;
  m[0][0] = 1;
  m[0][1] = 0;
  m[1][0] = 0;
  m[1][1] = 1;
  fpr(m, 2);
  printf("g = %d\n", g);
  i = fa(m, 2, num, &p1, p2);
  printf("%d %d %d %d\n", g, p1, p2, i);
  printf("%d %d\n", m[0][0], m[0][1]);
  printf("%d %d\n", m[0][0], m[0][1]);
  c = 'a' + num + 1; 
  printf("%c\n", c);
  x = 5;
  p2 = 3;
  x = x/2;
  y = p2/2;
  printf("x = %3.1f, y = %3.1f\n", x, y);
  s[0] = 'a';
  s[1] = 'b';
  s[2] = 'c';
  s[3] = 'd';
  s[4] = 'e';
  s[5] = 'f';
  s[6] = '\0';
  printf("s = %s\n", s);
  s[2+num%3] = '\0';
  printf("s = %s\n", s);  
  return 0;
}
Dados: 6 

               Resultado da Simulação
24.  (POLI 87) Simule a execução do programa abaixo destacando a sua saída:

#include <stdio.h>
#define max 50

int indmax(float v[], int n)
{ 
  int j, indice;

  indice = 0;
  for (j = 1; j < n; j++)
    if (v[j] > v[indice]) 
      indice = j;
  return(indice);
}

void roda(float v[], int n, int imaior)
{ 
  int j, k; 
  float x[max];

  k = imaior;
  for (j = 0; j < k;   j++) 
    x[j] = v[j];
  for (j = 0; j < n-k; j++) 
    v[j] = v[j+k];
  for (j = 0; j < k;   j++) 
    v[n-k+j] = x[j];
}

int main()
{ 
  int i, m, n, l, c, imaior;
  float v[max], aux[max], a[max][max];

  printf("Digite m e n.\n");
  scanf("%d %d", &m, &n); 
  printf("m = %d   n = %d\n", m, n);
  printf("Digite uma matriz mxn.\n");
  for (l = 0; l < m; l++) { 
    for (c = 0; c < n; c++) { 
      scanf("%f", &a[l][c]); 
      printf("%4.1f ", a[l][c]); 
    }
    printf("\n");
  }
  for (l = 0; l < m; l++) { 
    for (i = 0; i < n; i++) 
      aux[i] = a[l][i];
    imaior = indmax(aux, n); 
    printf("%d\n", imaior);
    roda(aux, n, imaior);
    for (i = 0; i < n; i++)
      a[l][i] = aux[i]; 
    for (c = 0; c < n; c++) 
      printf("%4.1f ", a[l][c]);
    printf("\n");
  }
  for (l = 0; l < m; l++) 
    v[l] = a[l][0];
  imaior = indmax(v, m);
  printf("\n%4.1f\n", a[imaior][0]);
  return 0;
}
Dados:
         3           4 
      1.9        1.0        -1.7          1.6 
      0.0        2.5        -2.8        -3.5 
    -0.5     -2.0           1.3          1.0 

               Resultado da Simulação
25.  Considere as seguintes declarações:

void m(int x[][2], int y[][2], int z[][2])
{ 
  z[0][0] = x[0][0] * y[0][0] + x[0][1] * y[1][0];
  z[0][1] = x[0][0] * y[0][1] + x[0][1] * y[1][1];
  z[1][0] = x[1][0] * y[0][0] + x[1][1] * y[1][0];
  z[1][1] = x[1][0] * y[0][1] + x[1][1] * y[1][1];
}
Dados:

Simule as seguintes chamadas da função acima:
(a) m (A, B, C); 
(b) m (A, B, A); 
(c) m (A, B, B). 


